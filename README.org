* OpenAI API

A WIP Emacs interface to OpenAI's language model API.

This is intended to be used as a library for building interfaces to the language models. As such, it doesn't expose any user-facing interactive functions.

*Note: This currently only has support for the POST request to the completions endpoint (synchronous).*

* Installation

[[https://github.com/jwiegley/use-package][use-package]] example:

#+begin_example emacs-lisp
(use-package openai-api
  :straight (openai-api :type git :host github :repo "dangirsh/openai-api")
  :config
  ;; required
  (setq openai-api-token <token>)       ; https://beta.openai.com/account/api-keys
  ;; optional
  (setq openai-api-engine "davinci-codex") ; requires private beta access
  (setq openai-api-completion-params '((max_tokens . 100)
                                       (temperature . 0.0)
                                       (frequency_penalty . 0)
                                       (presence_penalty . 0)
                                       (n . 1))))
#+end_example

** Dependencies

- [[https://github.com/tkf/emacs-request][Request.el -- Easy HTTP request for Emacs Lisp]]

* Test

#+begin_src emacs-lisp :results verbatim
(let ((openai-api-completion-params '((max_tokens . 2)
                                       (temperature . 0.0)
                                       (frequency_penalty . 0)
                                       (presence_penalty . 0)
                                       (n . 1))))
  (car (openai-api-get-completions "2 + 2 =")))
#+end_src

#+RESULTS:
: "4"


* Notes

- I've only tested this on GNU Emacs 28.0.50.

* Related packages

- [[https://github.com/debanjum/codex-completion/][debanjum/codex-completion: Generate, Complete Code in Emacs using Op...]]
- [[https://github.com/semiosis/pen.el/][semiosis/pen.el: pen.el is a package for prompt engineering in emacs...]]
